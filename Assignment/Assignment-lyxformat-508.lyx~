#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Final Practical Work Electronics III
\end_layout

\begin_layout Author
MÃ¼ller, Malena
\begin_inset Newline newline
\end_inset

Diaz, Ian Cruz
\begin_inset Newline newline
\end_inset

Oh, Victor
\begin_inset Newline newline
\end_inset

Lin, Benjamin
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
In this work we were asked to implement a precise chronometer, digital electroni
cs, and a VGA screen of 640 pixels wide and 480 pixels in height.
 We were provided with a Cyclone IV Field Programmable Gate Array, also
 known as FPGA, and we had to create the inside digital logic using Verilog
 Hardware Descriptive Language.
 The implementation of this chronometer is explained in detail in the following
 sections.
\end_layout

\begin_layout Section
How VGA Works
\end_layout

\begin_layout Standard
The functioning of the VGA protocol is very simple, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "1"

\end_inset

, we only have to analyze 5 of its pins.
 Whatever the V_SYNC pin receives, corresponds to the vertical synchronization
 of the screen, while the H_SYNC pin receives what corresponds to its horizontal
 synchronization.
 The R, G and B wires correspond to the Red, Geen and Blue colors of the
 pixel to print.
 So, if we call 
\begin_inset Formula $T_{H}$
\end_inset

 to the h_sync period and 
\begin_inset Formula $T_{V}$
\end_inset

 to the v_sync period, to reference a single pixel as line-column, the formulas
 are the following:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Line=\frac{T_{V}}{480}*(time\,h_{sync}\,is\,on)\label{eq:1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Column=\frac{T_{H}}{640}*(time\,v_{sync}\,is\,on)\label{eq:2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/VGA pins.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
VGA Pins
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "1"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
To implement the chronometer, we follow the diagram shown on Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "2"

\end_inset

, we used a h_sync and v_sync generator module, a Screen Positioning Module,
 a Time Counter Module, a Timer Module and a binary to a 7 segments display
 module.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Implementation Diagram
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "2"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
VGA Module
\end_layout

\begin_layout Standard
This module corresponds to the Video Graphics Array (VGA), which is a graphics
 standard for video display.
 There are five pins in the VGA connector, that we have to control: the
 V_SYNC, H_SYNC, R, G and B, shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "1"

\end_inset

.
 We needed to send five signals, one to each of these five different monitor's
 pins.
 This signals' generator module was made in Verilog.
 It outputs the following signals:
\end_layout

\begin_layout Standard
-Vsync: The vertical synchronization's signal.
\end_layout

\begin_layout Standard
-Hsync: The horizontal synchronization's signal.
 
\end_layout

\begin_layout Standard
-R: The signal corresponding to the red component of a pixel.
\end_layout

\begin_layout Standard
-G: The signal corresponding to the green component of a pixel.
\end_layout

\begin_layout Standard
-B: The signal corresponding to the blue component of a pixel.
\end_layout

\begin_layout Standard
We used a resolution of 640x480.
 The Vsync signal is responsible of updating the entire display, in each
 of its periods.
 In order to do so, the Hsync signal updates one horizontal line of the
 display in each of the Hsync signal's period.
 The R, G and B signals update the color of one pixel.
\end_layout

\begin_layout Standard
The vertical sync is formed by four parts, in the following order: vertical
 sync pulse, vertical back porch, vertical display and vertical vertical
 front porch.
 As well as the vertical sync signal, the horizontal sync is formed by a
 horizontal sync pulse, horizontal back porch, horizontal display and horizontal
 front porch.
 These signals are 1 only during their sync pulses.
 For the rest of the parts that form these signals, their value is 0.
 Moreover, the display colors are only shown during the vertical display
 time and horizontal display time of these signals.
 This means that while both the Vsync and Hsync signals are in their display
 part of the period, the R, G and B signals output the values corresponding
 to the pixel that has to be shown in that position of the screen.
 For the rest of the time, the R, G and B signals are 0.
\end_layout

\begin_layout Standard
Four Verilog modules were made to generate these signals.
 The Vsync module, Hsync module, RGB module, and finally the VGA module
 which includes the previously mentioned three modules.
\end_layout

\begin_layout Subsubsection*
Vsync Module
\end_layout

\begin_layout Standard
This module generates and it outputs the entire Vsync signal, and it also
 outputs a vertical display sigal which is in 0 only when colors can appear
 in the corresponding vertical position.
\end_layout

\begin_layout Subsubsection*
Hsync Module
\end_layout

\begin_layout Standard
This module generates and it outputs the entire Hsync signal, and it also
 outputs a horizontal display signal which is in 0 when colors can appear
 in the corresponding horizontal position.
\end_layout

\begin_layout Standard
The vertical display and the horizontal display signals are not sent to
 the VGA pins, but they are used by the Screen Positioning Module, in order
 to know when to update the pixels' colors.
 
\end_layout

\begin_layout Standard
AGREGAR FOTO GTKWAVEEEEEEEEEEEEEEEEEEE
\end_layout

\begin_layout Standard
In above's image it can be seen the functioning of the previously mentioned
 signals.
 The vertical display and the horizontal display signals are not sent to
 the VGA pins, but they are used by the Screen Positioning Module, in order
 to know when to update the pixels' colors.
 
\end_layout

\begin_layout Subsubsection*
RGB Module
\end_layout

\begin_layout Standard
This module generates the R, G and B output signals.
\end_layout

\begin_layout Subsection
Screen Positioning Module
\end_layout

\begin_layout Standard
For this module, we received the same signals sent to the VGA (h_sync and
 v_sync), the BCD digits of the hours, minutes and seconds counted, and
 a clock working at the same speed as the h_sync clock for each pixel.
 The outputs of this module, were connected to the H_sync and V_sync Generato
 Module, and this are the R , G and B colors of the VGA pixels.
\end_layout

\begin_layout Subsubsection
Operation
\end_layout

\begin_layout Standard
The operation of this module is pretty straight foward, by knowing the h_sync
 and the v_sync signals, and having the same clock as the h_sync generator,
 it determines at each moment in wich pixel it is working on.
 To do this, it utilizes the equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:2"

\end_inset

), and by knowing the position, it devides the screen in quadrants for each
 digit of the chronometer.
 Whenever it detects that it is on a digit quadrant, it uses the NumTo7Seg
 module to convert the correspond digit to a series of 7 bits, as if it
 where a 7 segment display, and by knowing each pixel, it determines which
 pixel it has to print in white, and which in black.
\end_layout

\begin_layout Standard
Finally, it feedbacks the H-sync and V_sync Generator module with the colors
 processed in this module.
\end_layout

\begin_layout Subsection
Time Counter Module
\end_layout

\begin_layout Subsection
Timer Module
\end_layout

\end_body
\end_document
