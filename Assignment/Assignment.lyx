#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Final Practical Work Electronics III
\end_layout

\begin_layout Author
MÃ¼ller, Malena
\begin_inset Newline newline
\end_inset

Diaz, Ian Cruz
\begin_inset Newline newline
\end_inset

Oh, Victor
\begin_inset Newline newline
\end_inset

Lin, Benjamin
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
In this work we were asked to implement a precise chronometer, digital electroni
cs, and a VGA screen of 640 pixels wide and 480 pixels in height.
 We were provided with a Cyclone IV Field Programmable Gate Array, also
 known as FPGA, and we had to create the digital logic inside using Verilog
 Hardware Descriptive Language.
 The implementation of this chronometer is explained in detail in the following
 sections.
\end_layout

\begin_layout Section
How VGA Works
\end_layout

\begin_layout Standard
The functioning of the VGA protocol is very simple, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "1"

\end_inset

, we only have to analyze 5 wires, the h_sync or also known as Horizontal
 Synchronization, is the cable we use to send a clock with the period such
 that the horizontal printing (in one line) on the screen happens 1 time
 per period, and the v_sync or Vertical Synchronization, is the equivalent
 for the the vertical lines.
 It's important to clarify that the clock in v_sync is much slower tha the
 h_sync.
 The R, G and B wires correspord to the Red, Geen and Blue colors of the
 pixel to print.
 So, if we call 
\begin_inset Formula $T_{H}$
\end_inset

 to the h_sync period and 
\begin_inset Formula $T_{V}$
\end_inset

 to the v_sync period, to reference a single pixel as line-column, the formulas
 are the following:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Line=\frac{T_{V}}{480}*(time\,h_{sync}\,is\,on)\label{eq:1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Column=\frac{T_{H}}{640}*(time\,v_{sync}\,is\,on)\label{eq:2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/VGA pins.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
VGA Pins
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "1"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
To implement the chronometer, we follow the diagram shown on Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "2"

\end_inset

, we used a h_sync and v_sync generator module, a Screen Positioning Module,
 a Time Counter Module, a Timer Module and a binary to a 7 segments display
 module.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Implementation Diagram
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "2"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
H_sync and V_sync generator module
\end_layout

\begin_layout Subsection
Screen Positioning Module
\end_layout

\begin_layout Standard
For this module, we received the same signals sent to the VGA (h_sync and
 v_sync), the BCD digits of the hours, minutes and seconds counted, and
 a clock working at the same speed as the h_sync clock for each pixel.
 The outputs of this module, were connected to the H_sync and V_sync Generato
 Module, and this are the R , G and B colors of the VGA pixels.
\end_layout

\begin_layout Subsubsection
Operation
\end_layout

\begin_layout Standard
The operation for this module is pretty straight foward, by knowing the
 h_sync and the v_sync signals, and having the same clock as the h_sync
 generator, it determines at each moment in wich pixel it is working on.
 To do this, it utilizes the equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:1"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:2"

\end_inset

), and by knowing the position, it devides the screen in quadrants for each
 digit of the chronometer.
 Whenever it detects that it is on a digit quadrant, it uses the NumTo7Seg
 module to convert the correspond digit to a series of 7 bits, as if it
 where a 7 segment display, and by knowing each pixel, it determines which
 pixel it has to print in white, and which in black.
\end_layout

\begin_layout Standard
Finally, it feedsback the H-sync and V_sync Generator module with the colors
 processed in this module.
\end_layout

\begin_layout Subsection
Time Counter Module
\end_layout

\begin_layout Subsection
Timer Module
\end_layout

\end_body
\end_document
