$date
	Mon Nov 19 19:45:30 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100us
$end
$scope module bin2bcd_tb $end
$var wire 6 ! s [5:0] $end
$var wire 10 " ms [9:0] $end
$var wire 6 # min [5:0] $end
$var wire 4 $ hr [3:0] $end
$var wire 4 % bcd_s_1 [3:0] $end
$var wire 4 & bcd_s_0 [3:0] $end
$var wire 4 ' bcd_ms_2 [3:0] $end
$var wire 4 ( bcd_ms_1 [3:0] $end
$var wire 4 ) bcd_ms_0 [3:0] $end
$var wire 4 * bcd_min_1 [3:0] $end
$var wire 4 + bcd_min_0 [3:0] $end
$var wire 4 , bcd_h [3:0] $end
$var reg 26 - count [25:0] $end
$var reg 1 . enable $end
$var reg 1 / nr $end
$scope module converter $end
$var wire 6 0 bin_s [5:0] $end
$var wire 10 1 bin_ms [9:0] $end
$var wire 6 2 bin_min [5:0] $end
$var wire 4 3 bin_h [3:0] $end
$var reg 4 4 bcd_h [3:0] $end
$var reg 4 5 bcd_min_0 [3:0] $end
$var reg 4 6 bcd_min_1 [3:0] $end
$var reg 4 7 bcd_ms_0 [3:0] $end
$var reg 4 8 bcd_ms_1 [3:0] $end
$var reg 4 9 bcd_ms_2 [3:0] $end
$var reg 4 : bcd_s_0 [3:0] $end
$var reg 4 ; bcd_s_1 [3:0] $end
$upscope $end
$scope module watch_data $end
$var wire 26 < count [25:0] $end
$var wire 1 = latch $end
$var wire 1 / nreset $end
$var reg 4 > hr [3:0] $end
$var reg 6 ? min [5:0] $end
$var reg 10 @ ms [9:0] $end
$var reg 6 A s [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 A
b0 @
b0 ?
b0 >
z=
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
0/
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10
b1 '
b1 9
b1 &
b1 :
b1 !
b1 0
b1 A
b1100100 "
b1100100 1
b1100100 @
b10001001100 -
b10001001100 <
1/
#20
b0 '
b0 9
b0 &
b0 :
b10 ,
b10 4
b10 $
b10 3
b10 >
b0 !
b0 0
b0 A
b0 "
b0 1
b0 @
b11011011101110100000000 -
b11011011101110100000000 <
1.
#30
b101 '
b101 9
b100 (
b100 8
b1000 )
b1000 7
b11 &
b11 :
b10 +
b10 5
b0 ,
b0 4
b0 $
b0 3
b0 >
b10 #
b10 2
b10 ?
b11 !
b11 0
b11 A
b1000100100 "
b1000100100 1
b1000100100 @
b11110001010011100 -
b11110001010011100 <
#40
b110 '
b110 9
b0 (
b0 8
b100 )
b100 7
b101 %
b101 ;
b100 &
b100 :
b10 *
b10 6
b101 +
b101 5
b1001 ,
b1001 4
b1001 $
b1001 3
b1001 >
b11001 #
b11001 2
b11001 ?
b110110 !
b110110 0
b110110 A
b1001011100 "
b1001011100 1
b1001011100 @
b10000001100001101100101100 -
b10000001100001101100101100 <
#50
b111 '
b111 9
b1000 (
b1000 8
b11 )
b11 7
b0 %
b0 ;
b11 &
b11 :
b1 *
b1 6
b110 +
b110 5
b0 ,
b0 4
b0 $
b0 3
b0 >
b10000 #
b10000 2
b10000 ?
b11 !
b11 0
b11 A
b1100001111 "
b1100001111 1
b1100001111 @
b11101011010011000111 -
b11101011010011000111 <
#60
b110 '
b110 9
b100 (
b100 8
b100 )
b100 7
b100 %
b100 ;
b1000 &
b1000 :
b10 *
b10 6
b10 +
b10 5
b10110 #
b10110 2
b10110 ?
b110000 !
b110000 0
b110000 A
b1010000100 "
b1010000100 1
b1010000100 @
b101001110001001000100 -
b101001110001001000100 <
#100
0/
